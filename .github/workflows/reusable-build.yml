name: "Build (Reusable)"

on:
  workflow_call:

jobs:
  building:
    runs-on: windows-2022
    env:
      DevEnvDir: "C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\Common7\\IDE\\"
      SolutionDir: ${{ github.workspace }}\src

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ secrets.DATAM8_FRONTEND_SUBMODULES_PAT }}

      - name: Check out solution respoitory
        uses: actions/checkout@v4
        with:
          repository: oraylis/automation-sample-solution
          token: ${{ secrets.DATAM8_SAMPLE_SOLUTION_PAT }}
          path: automation-sample-solution

      - name: Integrate latest version of sample solution generator into frontend
        run: |
          Copy-Item `
          -Path automation-sample-solution/Generate/* `
          -Destination src/Dm8Main/Solution/CreateNewProject/Generate/ `
          -Recurse `
          -Force

      - name: Create global.json file
        run: |
          echo '{
            "sdk": {
              "version": "8.0.406"
            }
          }' > global.json

      - name: Cache NuGet packages
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: nuget-${{ runner.os }}-${{ hashFiles('**/*.csproj', '**/packages.lock.json') }}
          restore-keys: |
            nuget-${{ runner.os }}-

      - name: Restore dependencies
        run: dotnet restore src/Dm8Main.sln

      - name: Build DataM8 Solution
        run: dotnet build src/Dm8Main.sln

      - name: Build Validator CLI for Linux
        run: |
          dotnet build src/Dm8Validate/Dm8Validate.csproj `
          -c Debug_Linux `
          -r linux-x64 `
          --self-contained

      - name: Install WIX
        run: |
          dotnet tool install --global wix

      - name: Add WIX dependencies
        run: wix.exe extension add -g WixToolset.UI.wixext/5.0.2

      - name: Build Setup
        run: dotnet build src/Dm8Setup/Dm8Setup.csproj
