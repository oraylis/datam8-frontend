/* DataM8
 * Copyright (C) 2024-2025 ORAYLIS GmbH
 *
 * This file is part of DataM8.
 *
 * DataM8 is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * DataM8 is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <https://www.gnu.org/licenses/>.
 */

// Generated by DataM8
//----------------------
// <auto-generated>
//     Generated using the NJsonSchema v11.1.0.0 (Newtonsoft.Json v13.0.3.0) (http://NJsonSchema.org)
// </auto-generated>
//----------------------


namespace Dm8Data.Core
{
    #pragma warning disable // Disable all warnings

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.1.0.0 (Newtonsoft.Json v13.0.3.0)")]
    public partial class Parameter : Prism.Mvvm.BindableBase
    {
        private string _name;
        private string _value;
        private object _custom;

        [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

        [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Value
        {
            get { return _value; }

            set { SetProperty(ref _value, value); }
        }

        [Newtonsoft.Json.JsonProperty("custom", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public object Custom
        {
            get { return _custom; }

            set { SetProperty(ref _custom, value); }
        }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.1.0.0 (Newtonsoft.Json v13.0.3.0)")]
    public partial class Attribute : Prism.Mvvm.BindableBase
    {
        private string _name;
        private string _displayName;
        private string _purpose;
        private string _explanation;
        private string _attributeType;
        private string _dataType;
        private int? _businessKeyNo;
        private string _alternateKeyGroup;
        private int? _alternateKeyNo;
        private int? _charLength;
        private string _charSet;
        private int? _precision;
        private int? _scale;
        private bool? _nullable;
        private string _unitAttribute;
        private System.Collections.ObjectModel.ObservableCollection<Parameter> _parameter;
        private System.Collections.ObjectModel.ObservableCollection<string> _tags;
        private System.Collections.ObjectModel.ObservableCollection<string> _refactorNames;
        private AttributeHistory? _history = Dm8Data.Core.AttributeHistory.SCD1;

        [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

        [Newtonsoft.Json.JsonProperty("displayName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string DisplayName
        {
            get { return _displayName; }

            set { SetProperty(ref _displayName, value); }
        }

        [Newtonsoft.Json.JsonProperty("purpose", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Purpose
        {
            get { return _purpose; }

            set { SetProperty(ref _purpose, value); }
        }

        [Newtonsoft.Json.JsonProperty("explanation", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Explanation
        {
            get { return _explanation; }

            set { SetProperty(ref _explanation, value); }
        }

        [Newtonsoft.Json.JsonProperty("attributeType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string AttributeType
        {
            get { return _attributeType; }

            set { SetProperty(ref _attributeType, value); }
        }

        [Newtonsoft.Json.JsonProperty("dataType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string DataType
        {
            get { return _dataType; }

            set { SetProperty(ref _dataType, value); }
        }

        [Newtonsoft.Json.JsonProperty("businessKeyNo", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? BusinessKeyNo
        {
            get { return _businessKeyNo; }

            set { SetProperty(ref _businessKeyNo, value); }
        }

        [Newtonsoft.Json.JsonProperty("alternateKeyGroup", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string AlternateKeyGroup
        {
            get { return _alternateKeyGroup; }

            set { SetProperty(ref _alternateKeyGroup, value); }
        }

        [Newtonsoft.Json.JsonProperty("alternateKeyNo", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? AlternateKeyNo
        {
            get { return _alternateKeyNo; }

            set { SetProperty(ref _alternateKeyNo, value); }
        }

        [Newtonsoft.Json.JsonProperty("charLength", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? CharLength
        {
            get { return _charLength; }

            set { SetProperty(ref _charLength, value); }
        }

        [Newtonsoft.Json.JsonProperty("charSet", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string CharSet
        {
            get { return _charSet; }

            set { SetProperty(ref _charSet, value); }
        }

        [Newtonsoft.Json.JsonProperty("precision", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Precision
        {
            get { return _precision; }

            set { SetProperty(ref _precision, value); }
        }

        [Newtonsoft.Json.JsonProperty("scale", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Scale
        {
            get { return _scale; }

            set { SetProperty(ref _scale, value); }
        }

        [Newtonsoft.Json.JsonProperty("nullable", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? Nullable
        {
            get { return _nullable; }

            set { SetProperty(ref _nullable, value); }
        }

        [Newtonsoft.Json.JsonProperty("unitAttribute", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string UnitAttribute
        {
            get { return _unitAttribute; }

            set { SetProperty(ref _unitAttribute, value); }
        }

        [Newtonsoft.Json.JsonProperty("parameter", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.ObjectModel.ObservableCollection<Parameter> Parameter
        {
            get { return _parameter; }

            set { SetProperty(ref _parameter, value); }
        }

        [Newtonsoft.Json.JsonProperty("tags", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.ObjectModel.ObservableCollection<string> Tags
        {
            get { return _tags; }

            set { SetProperty(ref _tags, value); }
        }

        [Newtonsoft.Json.JsonProperty("refactorNames", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.ObjectModel.ObservableCollection<string> RefactorNames
        {
            get { return _refactorNames; }

            set { SetProperty(ref _refactorNames, value); }
        }

        [Newtonsoft.Json.JsonProperty("history", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public AttributeHistory? History
        {
            get { return _history; }

            set { SetProperty(ref _history, value); }
        }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.1.0.0 (Newtonsoft.Json v13.0.3.0)")]
    public partial class RelationshipField : Prism.Mvvm.BindableBase
    {
        private string _dm8lAttr;
        private string _dm8lKeyAttr;

        [Newtonsoft.Json.JsonProperty("dm8lAttr", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Dm8lAttr
        {
            get { return _dm8lAttr; }

            set { SetProperty(ref _dm8lAttr, value); }
        }

        [Newtonsoft.Json.JsonProperty("dm8lKeyAttr", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Dm8lKeyAttr
        {
            get { return _dm8lKeyAttr; }

            set { SetProperty(ref _dm8lKeyAttr, value); }
        }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.1.0.0 (Newtonsoft.Json v13.0.3.0)")]
    public partial class Relationship : Prism.Mvvm.BindableBase
    {
        private string _dm8lKey;
        private string _role;
        private System.Collections.ObjectModel.ObservableCollection<RelationshipField> _fields;

        [Newtonsoft.Json.JsonProperty("dm8lKey", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Dm8lKey
        {
            get { return _dm8lKey; }

            set { SetProperty(ref _dm8lKey, value); }
        }

        [Newtonsoft.Json.JsonProperty("role", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Role
        {
            get { return _role; }

            set { SetProperty(ref _role, value); }
        }

        [Newtonsoft.Json.JsonProperty("fields", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.ObjectModel.ObservableCollection<RelationshipField> Fields
        {
            get { return _fields; }

            set { SetProperty(ref _fields, value); }
        }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.1.0.0 (Newtonsoft.Json v13.0.3.0)")]
    public partial class CoreEntity : Prism.Mvvm.BindableBase
    {
        private string _dataModule;
        private string _dataProduct;
        private string _name;
        private string _extensionOf;
        private string _displayName;
        private string _purpose;
        private string _explanation;
        private System.Collections.ObjectModel.ObservableCollection<Parameter> _parameters;
        private System.Collections.ObjectModel.ObservableCollection<string> _tags;
        private System.Collections.ObjectModel.ObservableCollection<Attribute> _attribute;
        private System.Collections.ObjectModel.ObservableCollection<Relationship> _relationship;
        private System.Collections.ObjectModel.ObservableCollection<string> _refactorNames;

        [Newtonsoft.Json.JsonProperty("dataModule", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string DataModule
        {
            get { return _dataModule; }

            set { SetProperty(ref _dataModule, value); }
        }

        [Newtonsoft.Json.JsonProperty("dataProduct", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string DataProduct
        {
            get { return _dataProduct; }

            set { SetProperty(ref _dataProduct, value); }
        }

        [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

        [Newtonsoft.Json.JsonProperty("extensionOf", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ExtensionOf
        {
            get { return _extensionOf; }

            set { SetProperty(ref _extensionOf, value); }
        }

        [Newtonsoft.Json.JsonProperty("displayName", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string DisplayName
        {
            get { return _displayName; }

            set { SetProperty(ref _displayName, value); }
        }

        [Newtonsoft.Json.JsonProperty("purpose", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Purpose
        {
            get { return _purpose; }

            set { SetProperty(ref _purpose, value); }
        }

        [Newtonsoft.Json.JsonProperty("explanation", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Explanation
        {
            get { return _explanation; }

            set { SetProperty(ref _explanation, value); }
        }

        [Newtonsoft.Json.JsonProperty("parameters", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.ObjectModel.ObservableCollection<Parameter> Parameters
        {
            get { return _parameters; }

            set { SetProperty(ref _parameters, value); }
        }

        [Newtonsoft.Json.JsonProperty("tags", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.ObjectModel.ObservableCollection<string> Tags
        {
            get { return _tags; }

            set { SetProperty(ref _tags, value); }
        }

        [Newtonsoft.Json.JsonProperty("attribute", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.ObjectModel.ObservableCollection<Attribute> Attribute
        {
            get { return _attribute; }

            set { SetProperty(ref _attribute, value); }
        }

        [Newtonsoft.Json.JsonProperty("relationship", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.ObjectModel.ObservableCollection<Relationship> Relationship
        {
            get { return _relationship; }

            set { SetProperty(ref _relationship, value); }
        }

        [Newtonsoft.Json.JsonProperty("refactorNames", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.ObjectModel.ObservableCollection<string> RefactorNames
        {
            get { return _refactorNames; }

            set { SetProperty(ref _refactorNames, value); }
        }



        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.1.0.0 (Newtonsoft.Json v13.0.3.0)")]
    public partial class SourceEntity : Prism.Mvvm.BindableBase
    {
        private string _dm8l;
        private string _filter;
        private System.Collections.ObjectModel.ObservableCollection<Mapping> _mapping;

        [Newtonsoft.Json.JsonProperty("dm8l", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Dm8l
        {
            get { return _dm8l; }

            set { SetProperty(ref _dm8l, value); }
        }

        [Newtonsoft.Json.JsonProperty("filter", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Filter
        {
            get { return _filter; }

            set { SetProperty(ref _filter, value); }
        }

        [Newtonsoft.Json.JsonProperty("mapping", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.ObjectModel.ObservableCollection<Mapping> Mapping
        {
            get { return _mapping; }

            set { SetProperty(ref _mapping, value); }
        }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.1.0.0 (Newtonsoft.Json v13.0.3.0)")]
    public partial class CoreFunction : Prism.Mvvm.BindableBase
    {
        private string _fileType;
        private string _storageType;
        private string _processingMethod;
        private string _deltaExpression;
        private string _filterStatement;
        private System.Collections.ObjectModel.ObservableCollection<SourceEntity> _source;

        [Newtonsoft.Json.JsonProperty("fileType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string FileType
        {
            get { return _fileType; }

            set { SetProperty(ref _fileType, value); }
        }

        [Newtonsoft.Json.JsonProperty("storageType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string StorageType
        {
            get { return _storageType; }

            set { SetProperty(ref _storageType, value); }
        }

        [Newtonsoft.Json.JsonProperty("processingMethod", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ProcessingMethod
        {
            get { return _processingMethod; }

            set { SetProperty(ref _processingMethod, value); }
        }

        [Newtonsoft.Json.JsonProperty("deltaExpression", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string DeltaExpression
        {
            get { return _deltaExpression; }

            set { SetProperty(ref _deltaExpression, value); }
        }

        [Newtonsoft.Json.JsonProperty("filterStatement", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string FilterStatement
        {
            get { return _filterStatement; }

            set { SetProperty(ref _filterStatement, value); }
        }

        [Newtonsoft.Json.JsonProperty("source", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.ObjectModel.ObservableCollection<SourceEntity> Source
        {
            get { return _source; }

            set { SetProperty(ref _source, value); }
        }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.1.0.0 (Newtonsoft.Json v13.0.3.0)")]
    public partial class ModelEntry : Prism.Mvvm.BindableBase
    {
        private string _schema;
        private ModelEntryType _type;
        private CoreEntity _entity;
        private CoreFunction _function;

        [Newtonsoft.Json.JsonProperty("$schema", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Schema
        {
            get { return _schema; }

            set { SetProperty(ref _schema, value); }
        }

        [Newtonsoft.Json.JsonProperty("type", Required = Newtonsoft.Json.Required.Always)]
        public ModelEntryType Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CoreEntity Entity
        {
            get { return _entity; }

            set { SetProperty(ref _entity, value); }
        }

        [Newtonsoft.Json.JsonProperty("function", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CoreFunction Function
        {
            get { return _function; }

            set { SetProperty(ref _function, value); }
        }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.1.0.0 (Newtonsoft.Json v13.0.3.0)")]
    public enum AttributeHistory
    {

        [System.Runtime.Serialization.EnumMember(Value = @"SCD0")]
        SCD0 = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"SCD1")]
        SCD1 = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"SCD2")]
        SCD2 = 2,


        [System.Runtime.Serialization.EnumMember(Value = @"BK")]
        BK = 3,


        [System.Runtime.Serialization.EnumMember(Value = @"SK")]
        SK = 4,


        [System.Runtime.Serialization.EnumMember(Value = @"SCD1_TIMESTAMP")]
        SCD1_TIMESTAMP = 5,


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.1.0.0 (Newtonsoft.Json v13.0.3.0)")]
    public partial class Mapping : Prism.Mvvm.BindableBase
    {
        private string _name;
        private string _sourceComputation;
        private string _sourceName;

        [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

        [Newtonsoft.Json.JsonProperty("sourceComputation", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string SourceComputation
        {
            get { return _sourceComputation; }

            set { SetProperty(ref _sourceComputation, value); }
        }

        [Newtonsoft.Json.JsonProperty("sourceName", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string SourceName
        {
            get { return _sourceName; }

            set { SetProperty(ref _sourceName, value); }
        }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.1.0.0 (Newtonsoft.Json v13.0.3.0)")]
    public enum ModelEntryType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"core")]
        Core = 0,


    }
}
