

































// Generated by DataM8
//----------------------
// <auto-generated>
//     Generated using the NJsonSchema v11.1.0.0 (Newtonsoft.Json v13.0.3.0) (http://NJsonSchema.org)
// </auto-generated>
//----------------------


namespace Dm8Data.Curated
{
    #pragma warning disable // Disable all warnings

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.1.0.0 (Newtonsoft.Json v13.0.3.0)")]
    public partial class ComputationSourceEntity : Prism.Mvvm.BindableBase
    {
        private string _dm8l;

        [Newtonsoft.Json.JsonProperty("dm8l", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Dm8l
        {
            get { return _dm8l; }

            set { SetProperty(ref _dm8l, value); }
        }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.1.0.0 (Newtonsoft.Json v13.0.3.0)")]
    public partial class CuratedFunction : Prism.Mvvm.BindableBase
    {
        private string _name;
        private CuratedFunctionMerge_type _merge_type;
        private CuratedFunctionFrequency _frequency;
        private string _frequency_reference;
        private System.Collections.ObjectModel.ObservableCollection<ComputationSourceEntity> _source;

        /// <summary>
        /// name of function
        /// </summary>
        [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

        /// <summary>
        /// Merge type
        /// <br/>  - self=responsibility of function;
        /// <br/>  - partition=replace changed partition completely;
        /// <br/>  - merge=merge on primary key;
        /// <br/>  - replace=full replacement
        /// </summary>
        [Newtonsoft.Json.JsonProperty("merge_type", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public CuratedFunctionMerge_type Merge_type
        {
            get { return _merge_type; }

            set { SetProperty(ref _merge_type, value); }
        }

        /// <summary>
        /// Frequency of execution (not a schedule).
        /// <br/> The function is only executed once day/week/mounth/year
        /// </summary>
        [Newtonsoft.Json.JsonProperty("frequency", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public CuratedFunctionFrequency Frequency
        {
            get { return _frequency; }

            set { SetProperty(ref _frequency, value); }
        }

        /// <summary>
        /// Depending on the value of the frequency for
        /// <br/>  -no_restriction-&gt;nothing;
        /// <br/>  - daily=time; weekly=weekday(+time);
        /// <br/>  - monthly=day of month(+time);
        /// <br/>  - yearly=day+month(+time)
        /// </summary>
        [Newtonsoft.Json.JsonProperty("frequency_reference", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Frequency_reference
        {
            get { return _frequency_reference; }

            set { SetProperty(ref _frequency_reference, value); }
        }

        [Newtonsoft.Json.JsonProperty("source", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.ObjectModel.ObservableCollection<ComputationSourceEntity> Source
        {
            get { return _source; }

            set { SetProperty(ref _source, value); }
        }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.1.0.0 (Newtonsoft.Json v13.0.3.0)")]
    public partial class ModelEntry : Prism.Mvvm.BindableBase
    {
        private string _schema;
        private ModelEntryType _type;
        private Dm8Data.Core.CoreEntity _entity;
        private System.Collections.ObjectModel.ObservableCollection<CuratedFunction> _function;

        [Newtonsoft.Json.JsonProperty("$schema", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Schema
        {
            get { return _schema; }

            set { SetProperty(ref _schema, value); }
        }

        [Newtonsoft.Json.JsonProperty("type", Required = Newtonsoft.Json.Required.Always)]
        public ModelEntryType Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Dm8Data.Core.CoreEntity Entity
        {
            get { return _entity; }

            set { SetProperty(ref _entity, value); }
        }

        [Newtonsoft.Json.JsonProperty("function", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.ObjectModel.ObservableCollection<CuratedFunction> Function
        {
            get { return _function; }

            set { SetProperty(ref _function, value); }
        }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.1.0.0 (Newtonsoft.Json v13.0.3.0)")]
    public enum CuratedFunctionMerge_type
    {

        [System.Runtime.Serialization.EnumMember(Value = @"self")]
        Self = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"partition")]
        Partition = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"merge")]
        Merge = 2,


        [System.Runtime.Serialization.EnumMember(Value = @"replace")]
        Replace = 3,


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.1.0.0 (Newtonsoft.Json v13.0.3.0)")]
    public enum CuratedFunctionFrequency
    {

        [System.Runtime.Serialization.EnumMember(Value = @"no_restriction")]
        No_restriction = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"daily")]
        Daily = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"weekly")]
        Weekly = 2,


        [System.Runtime.Serialization.EnumMember(Value = @"monthly")]
        Monthly = 3,


        [System.Runtime.Serialization.EnumMember(Value = @"yearly")]
        Yearly = 4,


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.1.0.0 (Newtonsoft.Json v13.0.3.0)")]
    public enum ModelEntryType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"curated")]
        Curated = 0,


    }









    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.1.0.0 (Newtonsoft.Json v13.0.3.0)")]
    public enum AttributeHistory
    {

        [System.Runtime.Serialization.EnumMember(Value = @"SCD0")]
        SCD0 = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"SCD1")]
        SCD1 = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"SCD2")]
        SCD2 = 2,


        [System.Runtime.Serialization.EnumMember(Value = @"BK")]
        BK = 3,


        [System.Runtime.Serialization.EnumMember(Value = @"SK")]
        SK = 4,


        [System.Runtime.Serialization.EnumMember(Value = @"SCD1_TIMESTAMP")]
        SCD1_TIMESTAMP = 5,


    }
}

