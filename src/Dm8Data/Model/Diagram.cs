










 























// Generated by DataM8
//----------------------
// <auto-generated>
//     Generated using the NJsonSchema v11.1.0.0 (Newtonsoft.Json v13.0.3.0) (http://NJsonSchema.org)
// </auto-generated>
//----------------------


#nullable enable


namespace Dm8Data.Diagram
{
    #pragma warning disable // Disable all warnings

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.1.0.0 (Newtonsoft.Json v13.0.3.0)")]
    public partial class Options : Prism.Mvvm.BindableBase
    {
        private string _name = default!;
        private string _value = default!;

        [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

        [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Value
        {
            get { return _value; }

            set { SetProperty(ref _value, value); }
        }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.1.0.0 (Newtonsoft.Json v13.0.3.0)")]
    public partial class Diagram : Prism.Mvvm.BindableBase
    {
        private string? _diagramType = default!;
        private System.Collections.ObjectModel.ObservableCollection<string>? _coreEntities = default!;
        private System.Collections.ObjectModel.ObservableCollection<Options>? _diagramOptions = default!;

        [Newtonsoft.Json.JsonProperty("diagramType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? DiagramType
        {
            get { return _diagramType; }

            set { SetProperty(ref _diagramType, value); }
        }

        [Newtonsoft.Json.JsonProperty("coreEntities", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.ObjectModel.ObservableCollection<string>? CoreEntities
        {
            get { return _coreEntities; }

            set { SetProperty(ref _coreEntities, value); }
        }

        [Newtonsoft.Json.JsonProperty("diagramOptions", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.ObjectModel.ObservableCollection<Options>? DiagramOptions
        {
            get { return _diagramOptions; }

            set { SetProperty(ref _diagramOptions, value); }
        }


    }
}

