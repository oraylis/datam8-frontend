/* DataM8
 * Copyright (C) 2024-2025 ORAYLIS GmbH
 *
 * This file is part of DataM8.
 *
 * DataM8 is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * DataM8 is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <https://www.gnu.org/licenses/>.
 */

// Generated by DataM8
//----------------------
// <auto-generated>
//     Generated using the NJsonSchema v11.1.0.0 (Newtonsoft.Json v13.0.3.0) (http://NJsonSchema.org)
// </auto-generated>
//----------------------


namespace Dm8Data.Raw
{
    #pragma warning disable // Disable all warnings

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.1.0.0 (Newtonsoft.Json v13.0.3.0)")]
    public partial class Parameter : Prism.Mvvm.BindableBase
    {
        private string _name;
        private string _value;
        private object _custom;

        [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

        [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Value
        {
            get { return _value; }

            set { SetProperty(ref _value, value); }
        }

        [Newtonsoft.Json.JsonProperty("custom", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public object Custom
        {
            get { return _custom; }

            set { SetProperty(ref _custom, value); }
        }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.1.0.0 (Newtonsoft.Json v13.0.3.0)")]
    public partial class RawEntity : Prism.Mvvm.BindableBase
    {
        private string _dataModule;
        private string _dataProduct;
        private string _name;
        private string _displayName;
        private string _purpose;
        private string _explanation;
        private System.Collections.ObjectModel.ObservableCollection<Parameter> _parameters;
        private System.Collections.ObjectModel.ObservableCollection<string> _tags;
        private System.Collections.ObjectModel.ObservableCollection<Attribute> _attribute;

        [Newtonsoft.Json.JsonProperty("dataModule", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string DataModule
        {
            get { return _dataModule; }

            set { SetProperty(ref _dataModule, value); }
        }

        [Newtonsoft.Json.JsonProperty("dataProduct", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string DataProduct
        {
            get { return _dataProduct; }

            set { SetProperty(ref _dataProduct, value); }
        }

        [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

        [Newtonsoft.Json.JsonProperty("displayName", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string DisplayName
        {
            get { return _displayName; }

            set { SetProperty(ref _displayName, value); }
        }

        [Newtonsoft.Json.JsonProperty("purpose", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Purpose
        {
            get { return _purpose; }

            set { SetProperty(ref _purpose, value); }
        }

        [Newtonsoft.Json.JsonProperty("explanation", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Explanation
        {
            get { return _explanation; }

            set { SetProperty(ref _explanation, value); }
        }

        [Newtonsoft.Json.JsonProperty("parameters", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.ObjectModel.ObservableCollection<Parameter> Parameters
        {
            get { return _parameters; }

            set { SetProperty(ref _parameters, value); }
        }

        [Newtonsoft.Json.JsonProperty("tags", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.ObjectModel.ObservableCollection<string> Tags
        {
            get { return _tags; }

            set { SetProperty(ref _tags, value); }
        }

        [Newtonsoft.Json.JsonProperty("attribute", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.ObjectModel.ObservableCollection<Attribute> Attribute
        {
            get { return _attribute; }

            set { SetProperty(ref _attribute, value); }
        }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.1.0.0 (Newtonsoft.Json v13.0.3.0)")]
    public partial class Attribute : Prism.Mvvm.BindableBase
    {
        private string _name;
        private string _type;
        private int? _charLength;
        private string _charSet;
        private int? _precision;
        private int? _scale;
        private bool? _nullable;
        private string _unitName;
        private string _unitType;
        private System.Collections.ObjectModel.ObservableCollection<string> _tags;
        private string _dateModified;
        private string _dateDeleted;

        [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

        [Newtonsoft.Json.JsonProperty("type", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

        [Newtonsoft.Json.JsonProperty("charLength", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? CharLength
        {
            get { return _charLength; }

            set { SetProperty(ref _charLength, value); }
        }

        [Newtonsoft.Json.JsonProperty("charSet", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string CharSet
        {
            get { return _charSet; }

            set { SetProperty(ref _charSet, value); }
        }

        [Newtonsoft.Json.JsonProperty("precision", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Precision
        {
            get { return _precision; }

            set { SetProperty(ref _precision, value); }
        }

        [Newtonsoft.Json.JsonProperty("scale", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Scale
        {
            get { return _scale; }

            set { SetProperty(ref _scale, value); }
        }

        [Newtonsoft.Json.JsonProperty("nullable", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? Nullable
        {
            get { return _nullable; }

            set { SetProperty(ref _nullable, value); }
        }

        [Newtonsoft.Json.JsonProperty("unitName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string UnitName
        {
            get { return _unitName; }

            set { SetProperty(ref _unitName, value); }
        }

        [Newtonsoft.Json.JsonProperty("unitType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string UnitType
        {
            get { return _unitType; }

            set { SetProperty(ref _unitType, value); }
        }

        [Newtonsoft.Json.JsonProperty("tags", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.ObjectModel.ObservableCollection<string> Tags
        {
            get { return _tags; }

            set { SetProperty(ref _tags, value); }
        }

        [Newtonsoft.Json.JsonProperty("dateModified", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string DateModified
        {
            get { return _dateModified; }

            set { SetProperty(ref _dateModified, value); }
        }

        [Newtonsoft.Json.JsonProperty("dateDeleted", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string DateDeleted
        {
            get { return _dateDeleted; }

            set { SetProperty(ref _dateDeleted, value); }
        }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.1.0.0 (Newtonsoft.Json v13.0.3.0)")]
    public partial class RawFunction : Prism.Mvvm.BindableBase
    {
        private string _dataSource;
        private string _sourceLocation;

        [Newtonsoft.Json.JsonProperty("dataSource", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string DataSource
        {
            get { return _dataSource; }

            set { SetProperty(ref _dataSource, value); }
        }

        [Newtonsoft.Json.JsonProperty("sourceLocation", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string SourceLocation
        {
            get { return _sourceLocation; }

            set { SetProperty(ref _sourceLocation, value); }
        }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.1.0.0 (Newtonsoft.Json v13.0.3.0)")]
    public partial class ModelEntry : Prism.Mvvm.BindableBase
    {
        private string _schema;
        private ModelEntryType _type;
        private RawEntity _entity;
        private RawFunction _function;

        [Newtonsoft.Json.JsonProperty("$schema", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Schema
        {
            get { return _schema; }

            set { SetProperty(ref _schema, value); }
        }

        [Newtonsoft.Json.JsonProperty("type", Required = Newtonsoft.Json.Required.Always)]
        public ModelEntryType Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public RawEntity Entity
        {
            get { return _entity; }

            set { SetProperty(ref _entity, value); }
        }

        [Newtonsoft.Json.JsonProperty("function", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public RawFunction Function
        {
            get { return _function; }

            set { SetProperty(ref _function, value); }
        }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.1.0.0 (Newtonsoft.Json v13.0.3.0)")]
    public enum ModelEntryType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"raw")]
        Raw = 0,


    }
}
