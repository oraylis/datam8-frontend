//----------------------
// <auto-generated>
//     Generated using the NJsonSchema v11.4.0.0 (Newtonsoft.Json v13.0.0.0) (http://NJsonSchema.org)
// </auto-generated>
//----------------------


namespace Dm8Data
{
    #pragma warning disable // Disable all warnings

    /// <summary>
    /// Defines a high-level layer or zone, typically used to clearly seperate different states of data processing, e.g. bronze, silver, gold, semantic.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.4.0.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Zone : Prism.Mvvm.BindableBase
    {
        private string _name;
        private string _targetName;
        private string _displayName;
        private string _localFolderName;


        /// <summary>
        /// Logical name of the zone (e.g., Raw, Core, Curated)
        /// </summary>
        [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Name    {
            get { return _name; }
            set { SetProperty(ref _name, value); }
        }

        /// <summary>
        /// Target system name for the zone (e.g., Bronze, Silver, Gold)
        /// </summary>
        [Newtonsoft.Json.JsonProperty("targetName", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string TargetName    {
            get { return _targetName; }
            set { SetProperty(ref _targetName, value); }
        }

        /// <summary>
        /// Human-readable display name
        /// </summary>
        [Newtonsoft.Json.JsonProperty("displayName", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string DisplayName    {
            get { return _displayName; }
            set { SetProperty(ref _displayName, value); }
        }

        /// <summary>
        /// Local folder name used in file system structure
        /// </summary>
        [Newtonsoft.Json.JsonProperty("localFolderName", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string LocalFolderName    {
            get { return _localFolderName; }
            set { SetProperty(ref _localFolderName, value); }
        }

    }
}