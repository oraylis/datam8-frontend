<#@ Import Namespace="System.Data.Common" #>
<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ output extension=".cs" #>

<#@ assembly name="netstandard" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Data" #>
<#@ assembly name="System.Data.Entity" #>
<#@ assembly name="System.Xml" #>
<#@ assembly name="System.Xml.Linq"#>
<#@ assembly name=".\Dm8Build\bin\Debug\net48\Newtonsoft.Json.dll" #>
<#@ assembly name=".\Dm8Build\bin\Debug\net48\NJsonSchema.dll" #>
<#@ assembly name=".\Dm8Build\bin\Debug\net48\NJsonSchema.CodeGeneration.dll" #>
<#@ assembly name=".\Dm8Build\bin\Debug\net48\NJsonSchema.CodeGeneration.CSharp.dll" #>

<#@ import namespace="System" #>
<#@ import namespace="System.Data" #>
<#@ import namespace="System.Data.Objects" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Data.Objects.DataClasses" #>
<#@ import namespace="System.Text.RegularExpressions" #>
<#@ import namespace="System.Globalization" #>
<#@ import namespace="System.Reflection" #>
<#@ import namespace="System.CodeDom" #>
<#@ import namespace="System.CodeDom.Compiler" #>
<#@ import namespace="Microsoft.CSharp"#>
<#@ import namespace="System.Text"#>
<#@ import namespace="Microsoft.VisualStudio.TextTemplating" #>
<#@ import namespace="NJsonSchema" #>
<#@ import namespace="NJsonSchema.CodeGeneration.CSharp" #>

<#
	try
    {
		string path = System.IO.Path.GetDirectoryName(Host.TemplateFile);
		string schemaJson = File.ReadAllText(path+"\\..\\..\\datam8-model\\schema\\Solution.json");
        var schema = JsonSchema.FromJsonAsync(schemaJson).Result;
		var generator = new CSharpGenerator(schema, new CSharpGeneratorSettings { Namespace="Dm8Data", GenerateDataAnnotations=true, ClassStyle = CSharpClassStyle.Prism  });
		var file = generator.GenerateFile("Solution");
		file = "// Generated by DataM8\n" + file;
		WriteLine(file);
    }
	catch(Exception ex)
    {
		WriteLine("// Exception "+ex.Message);
    }
#>
