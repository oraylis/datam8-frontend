<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:a="clr-namespace:Dm8Main.Avalon"
    xmlns:pt="http://propertytools.org/wpf"
    xmlns:b="clr-namespace:Dm8Main.Base"
    xmlns:dgext="urn:tom-englert.de/DataGridExtensions"
    xmlns:avalonedit="http://icsharpcode.net/sharpdevelop/avalonedit"       
    xmlns:local="clr-namespace:Dm8Main.Views"
    >

    <BooleanToVisibilityConverter x:Key="boolToVisibilityConverter" />
    <b:NullToVisibilityConverter x:Key="nullToVisibilityConverter" />
    <b:ListToVisibilityConverter x:Key="listToVisibilityConverter" />
    <dgext:SimpleContentFilterFactory x:Key="simpleContentFilter" />


    <Style TargetType="{x:Type local:DocumentView}">
        <Setter Property="Template">
            <Setter.Value>

                <ControlTemplate>

                    <Grid Name="PART_SplitGrid">

                        <Grid.RowDefinitions>
                            <RowDefinition Name="Top" Height="*"/>
                            <RowDefinition Name="Middle" Height="28" />
                            <RowDefinition Name="Bottom" Height="*"/>
                        </Grid.RowDefinitions>

                        <ContentControl Content="{Binding Path=Content, RelativeSource={RelativeSource AncestorType={x:Type local:DocumentView}}}" Name="PART_Design" />

                        <GridSplitter Grid.Row="1" Grid.ColumnSpan="1" Grid.RowSpan="1"  Height="4" Margin="0,0,0,24" Name="PART_SplitGridSplitter" />

                        <Grid Grid.Row="1" Name="PART_Buttons" Margin="0,8,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <ToggleButton 
                                    Grid.Column="0"
                                    Width="20"
                                    Height="20"
                                    Margin="2, 0, 10, 0"
                                    Name="PART_ButtonDesign"
                                    Content="{iconPacks:RemixIcon Kind=LayoutMasonryLine, Height=12, Width=12}"
                                    Style="{DynamicResource MahApps.Styles.ToggleButton.Circle}">
                            </ToggleButton>

                            <ToggleButton 
                                    Grid.Column="1"
                                    Width="20"
                                    Height="20"
                                    Margin="0, 0, 10, 0"
                                    Name="PART_ButtonEdit"
                                    Content="{iconPacks:Material Kind=CodeJson, Height=12, Width=12}"
                                    Style="{DynamicResource MahApps.Styles.ToggleButton.Circle}">
                            </ToggleButton>


                            <ToggleButton 
                                    Grid.Column="2"
                                    Width="20"
                                    Height="20"
                                    Margin="20, 0, 10, 0"
                                    Name="PART_ButtonError"
                                    Background="Red"
                                    Content="{iconPacks:Material Kind=AlertCircleOutline, Height=12, Width=12}"
                                    Visibility="{Binding ErrorList, Converter={StaticResource listToVisibilityConverter}}"                                    
                                    Style="{DynamicResource MahApps.Styles.ToggleButton.Circle}">
                            </ToggleButton>

                            <Popup IsOpen="{Binding ElementName=PART_ButtonError,Path=IsChecked}"   
                                    PlacementTarget="{Binding ElementName=PART_ButtonError}"
                                    AllowsTransparency="True"  
                                    PopupAnimation="Slide"  
                                    HorizontalOffset="2"                                     
                                    Width="800"                                    
                                    VerticalOffset="2">

                                <Popup.Resources>
                                    <ResourceDictionary>
                                        <ResourceDictionary.MergedDictionaries>

                                            <!-- MahApps.Metro resource dictionaries. Make sure that all file names are Case Sensitive! -->
                                            <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                                            <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />

                                        </ResourceDictionary.MergedDictionaries>
                                    </ResourceDictionary>
                                </Popup.Resources>

                                <Border BorderThickness="1" BorderBrush="{DynamicResource MahApps.Brushes.TextBox.Border.Focus}" Margin="4">
                                    <ListView ItemsSource="{Binding ErrorList}" Name="PART_ErrorList" Padding="4">
                                        <ListView.ItemTemplate>
                                            <DataTemplate>
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto" />
                                                        <ColumnDefinition />
                                                        <ColumnDefinition />
                                                    </Grid.ColumnDefinitions>
                                                    <StackPanel >
                                                        <TextBlock Text="Source" />
                                                        <TextBlock Text="{Binding Source}" />
                                                    </StackPanel >
                                                    <StackPanel Grid.Column="1" Margin="16,0,0,0">
                                                        <TextBlock Text="Message: " />
                                                        <TextBlock Text="{Binding Message}" />
                                                    </StackPanel>
                                                    <StackPanel Grid.Column="2" Margin="16,0,0,0">
                                                        <TextBlock Text="Locator: " />
                                                        <TextBlock Text="{Binding Adl}" />
                                                    </StackPanel>                                                
                                                </Grid>
                                            </DataTemplate>
                                        </ListView.ItemTemplate>
                                    </ListView>
                                </Border>

                            </Popup>

                            <TextBlock Grid.Column="3" Text="{Binding ErrorList[0].Message}" VerticalAlignment="Center" MaxHeight="24"  Foreground="Red"/>

                            <TextBlock Grid.Column="4" Text="Ln: " VerticalAlignment="Center" FontSize="9" />
                            <TextBlock Grid.Column="5" Text="{Binding ElementName=PART_Edit, Path=LinePos}" VerticalAlignment="Center" FontSize="9"  />

                            <TextBlock Grid.Column="6" Text="Ch: " VerticalAlignment="Center" Margin="4,0,0,0"  FontSize="9"   />
                            <TextBlock Grid.Column="7" Text="{Binding ElementName=PART_Edit, Path=ColumnPos}" VerticalAlignment="Center" MaxHeight="24" Margin="0,0,12,0" FontSize="9"   />

                        </Grid>


                        <a:TextEditorExt                             
                                Grid.Row="2"
                                Margin="4"
                                Visibility="Visible"                                 
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                SyntaxHighlighting="Json"
                                FontFamily="Courier New"                                                             
                                BorderThickness="1"
                                FontSize="10pt"
                                Foreground="{DynamicResource MahApps.Brushes.Text}"
                                x:Name="PART_Edit">
                            <i:Interaction.Behaviors>
                                <a:AvalonEditBehaviour 
                                    TextBinding="{Binding JsonCode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Delay=300}"  
                                    SyntaxHighlightingBinding="{Binding SyntaxHighlighting}"/>
                            </i:Interaction.Behaviors>
                        </a:TextEditorExt>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <DataTemplate x:Key="TokenizingEditControlItem">
        <Border Background="Gray" CornerRadius="4" Padding="6,2">
            <StackPanel Orientation="Horizontal">

                <TextBlock Text="{Binding Path=Value}" />
                <Button BorderBrush="Transparent" Background="Transparent" Margin="4,0,0,0" Padding="0" VerticalContentAlignment="Center" MinHeight="12">
                    <Path Name="cross" Data="M0,0 L1,1 M0,1 L1,0" Stretch="Fill" Height="6" Width="6" Stroke="Black" StrokeThickness="1" />
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <i:InvokeCommandAction Command="{Binding Path=ClickCommand}" 
                                                   PassEventArgsToCommand="True"
                            />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>
            </StackPanel>
        </Border>
    </DataTemplate>

    <DataTemplate x:Key="TokenizingEditControlItemEdit">
        <Border Background="Gray" CornerRadius="4" Padding="6,2">
            <StackPanel Orientation="Horizontal">
                <avalonedit:TextEditor Name="PART_Edit" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"
                               Foreground="{DynamicResource MahApps.Brushes.Text}"
                               >
                    
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Loaded">
                            <i:InvokeCommandAction Command="{Binding Path=LoadedCommand}" 
                                                   PassEventArgsToCommand="True"
                                                   />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="Unloaded">
                            <i:InvokeCommandAction Command="{Binding Path=UnloadedCommand}" 
                                                   PassEventArgsToCommand="True"
                            />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="PreviewKeyDown">
                            <i:InvokeCommandAction Command="{Binding Path=KeyDownCommand}" 
                                                   PassEventArgsToCommand="True"
                            />
                        </i:EventTrigger>

                    </i:Interaction.Triggers>

                    <i:Interaction.Behaviors>
                        <a:AvalonEditBehaviour 
                            TextBinding="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  
                            />
                    </i:Interaction.Behaviors>

                </avalonedit:TextEditor>
            </StackPanel>
        </Border>
    </DataTemplate>


    <Style TargetType="{x:Type ListBoxItem}" x:Key="TokenizingEditControlItemStyle">
        <Setter Property="ContentTemplate" Value="{StaticResource TokenizingEditControlItem}" />

        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, 
            RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment,
             RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" 
                            Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="Transparent"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Border.Background" Value="Transparent"></Setter>
            </Trigger>
            <DataTrigger Binding="{Binding IsEdit}" Value="True">
                <Setter Property="ContentTemplate" Value="{StaticResource TokenizingEditControlItemEdit}" />
            </DataTrigger>
        </Style.Triggers>

    </Style>


    <Style TargetType="{x:Type local:TokenizingEditControl}">
        <Setter Property="MinHeight" Value="32" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:TokenizingEditControl}">
                    <Grid Name="PART_Grid" HorizontalAlignment="Stretch">
                        <ListView Name="PART_ListView"
                                 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                 ItemContainerStyle="{StaticResource TokenizingEditControlItemStyle}">
                        <ListView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel Margin="4,0" Orientation="Horizontal"></WrapPanel>
                            </ItemsPanelTemplate>
                        </ListView.ItemsPanel>

                        <ListView.Resources>
                            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
                            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
                            <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="Transparent" />
                            <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="Transparent" />
                        </ListView.Resources>

                    </ListView>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>


    </Style>

</ResourceDictionary>
